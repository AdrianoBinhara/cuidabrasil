/*
 * FVC
 *
 * API para o app Floripa Versus Corona  
 *
 * OpenAPI spec version: 1.0.0
 * Contact: binhara@azuris.com.br
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class ReqNewUsuarioDef : IEquatable<ReqNewUsuarioDef>
    { 
        /// <summary>
        /// Login do usu&amp;aacute;rio.
        /// </summary>
        /// <value>Login do usu&amp;aacute;rio.</value>
        [DataMember(Name="username")]
        public string Username { get; set; }

        /// <summary>
        /// Nome do usu&amp;aacute;rio.
        /// </summary>
        /// <value>Nome do usu&amp;aacute;rio.</value>
        [DataMember(Name="nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Login do usu&amp;aacute;rio.
        /// </summary>
        /// <value>Login do usu&amp;aacute;rio.</value>
        [DataMember(Name="login")]
        public string Login { get; set; }

        /// <summary>
        /// Email do usu&amp;aacute;rio.
        /// </summary>
        /// <value>Email do usu&amp;aacute;rio.</value>
        [DataMember(Name="email")]
        public string Email { get; set; }

        /// <summary>
        /// CPF/CNPJ do usu&amp;aacute;rio.
        /// </summary>
        /// <value>CPF/CNPJ do usu&amp;aacute;rio.</value>
        [DataMember(Name="cpf_cnpj")]
        public string CpfCnpj { get; set; }

        /// <summary>
        /// Nome da cidade do usu&amp;aacute;rio.
        /// </summary>
        /// <value>Nome da cidade do usu&amp;aacute;rio.</value>
        [DataMember(Name="cidade")]
        public string Cidade { get; set; }

        /// <summary>
        /// Nome do estado/UF do usu&amp;aacute;rio.
        /// </summary>
        /// <value>Nome do estado/UF do usu&amp;aacute;rio.</value>
        [DataMember(Name="uf")]
        public string Uf { get; set; }

        /// <summary>
        /// CEP do usu&amp;aacute;rio.
        /// </summary>
        /// <value>CEP do usu&amp;aacute;rio.</value>
        [DataMember(Name="cep")]
        public string Cep { get; set; }

        /// <summary>
        /// Endere&amp;ccedil;o do usu&amp;aacute;rio.
        /// </summary>
        /// <value>Endere&amp;ccedil;o do usu&amp;aacute;rio.</value>
        [DataMember(Name="endereco")]
        public string Endereco { get; set; }

        /// <summary>
        /// Bairro do endere&amp;ccedil;o do usu&amp;aacute;rio.
        /// </summary>
        /// <value>Bairro do endere&amp;ccedil;o do usu&amp;aacute;rio.</value>
        [DataMember(Name="bairro")]
        public string Bairro { get; set; }

        /// <summary>
        /// Numero do endere&amp;ccedil;o do usu&amp;aacute;rio.
        /// </summary>
        /// <value>Numero do endere&amp;ccedil;o do usu&amp;aacute;rio.</value>
        [DataMember(Name="numero")]
        public string Numero { get; set; }

        /// <summary>
        /// Complemento do endere&amp;ccedil;o do usu&amp;aacute;rio.
        /// </summary>
        /// <value>Complemento do endere&amp;ccedil;o do usu&amp;aacute;rio.</value>
        [DataMember(Name="complemento")]
        public string Complemento { get; set; }

        /// <summary>
        /// Cod de indicacao do usu&amp;aacute;rio.
        /// </summary>
        /// <value>Cod de indicacao do usu&amp;aacute;rio.</value>
        [DataMember(Name="cod_indicacao")]
        public long? CodIndicacao { get; set; }

        /// <summary>
        /// Data de nascimento do usu&amp;aacute;rio
        /// </summary>
        /// <value>Data de nascimento do usu&amp;aacute;rio</value>
        [DataMember(Name="data_nascimento")]
        public string DataNascimento { get; set; }

        /// <summary>
        /// Telefone do usu&amp;aacute;rio.
        /// </summary>
        /// <value>Telefone do usu&amp;aacute;rio.</value>
        [DataMember(Name="phoneNumber")]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Modelo do device
        /// </summary>
        /// <value>Modelo do device</value>
        [DataMember(Name="phoneModel")]
        public string PhoneModel { get; set; }

        /// <summary>
        /// IMEI do device
        /// </summary>
        /// <value>IMEI do device</value>
        [DataMember(Name="imei")]
        public long? Imei { get; set; }

        /// <summary>
        /// UUID do device
        /// </summary>
        /// <value>UUID do device</value>
        [DataMember(Name="uuid")]
        public string Uuid { get; set; }

        /// <summary>
        /// Senha do usu&amp;aacute;rio
        /// </summary>
        /// <value>Senha do usu&amp;aacute;rio</value>
        [DataMember(Name="senha")]
        public string Senha { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ReqNewUsuarioDef {\n");
            sb.Append("  Username: ").Append(Username).Append("\n");
            sb.Append("  Nome: ").Append(Nome).Append("\n");
            sb.Append("  Login: ").Append(Login).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  CpfCnpj: ").Append(CpfCnpj).Append("\n");
            sb.Append("  Cidade: ").Append(Cidade).Append("\n");
            sb.Append("  Uf: ").Append(Uf).Append("\n");
            sb.Append("  Cep: ").Append(Cep).Append("\n");
            sb.Append("  Endereco: ").Append(Endereco).Append("\n");
            sb.Append("  Bairro: ").Append(Bairro).Append("\n");
            sb.Append("  Numero: ").Append(Numero).Append("\n");
            sb.Append("  Complemento: ").Append(Complemento).Append("\n");
            sb.Append("  CodIndicacao: ").Append(CodIndicacao).Append("\n");
            sb.Append("  DataNascimento: ").Append(DataNascimento).Append("\n");
            sb.Append("  PhoneNumber: ").Append(PhoneNumber).Append("\n");
            sb.Append("  PhoneModel: ").Append(PhoneModel).Append("\n");
            sb.Append("  Imei: ").Append(Imei).Append("\n");
            sb.Append("  Uuid: ").Append(Uuid).Append("\n");
            sb.Append("  Senha: ").Append(Senha).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ReqNewUsuarioDef)obj);
        }

        /// <summary>
        /// Returns true if ReqNewUsuarioDef instances are equal
        /// </summary>
        /// <param name="other">Instance of ReqNewUsuarioDef to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ReqNewUsuarioDef other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Username == other.Username ||
                    Username != null &&
                    Username.Equals(other.Username)
                ) && 
                (
                    Nome == other.Nome ||
                    Nome != null &&
                    Nome.Equals(other.Nome)
                ) && 
                (
                    Login == other.Login ||
                    Login != null &&
                    Login.Equals(other.Login)
                ) && 
                (
                    Email == other.Email ||
                    Email != null &&
                    Email.Equals(other.Email)
                ) && 
                (
                    CpfCnpj == other.CpfCnpj ||
                    CpfCnpj != null &&
                    CpfCnpj.Equals(other.CpfCnpj)
                ) && 
                (
                    Cidade == other.Cidade ||
                    Cidade != null &&
                    Cidade.Equals(other.Cidade)
                ) && 
                (
                    Uf == other.Uf ||
                    Uf != null &&
                    Uf.Equals(other.Uf)
                ) && 
                (
                    Cep == other.Cep ||
                    Cep != null &&
                    Cep.Equals(other.Cep)
                ) && 
                (
                    Endereco == other.Endereco ||
                    Endereco != null &&
                    Endereco.Equals(other.Endereco)
                ) && 
                (
                    Bairro == other.Bairro ||
                    Bairro != null &&
                    Bairro.Equals(other.Bairro)
                ) && 
                (
                    Numero == other.Numero ||
                    Numero != null &&
                    Numero.Equals(other.Numero)
                ) && 
                (
                    Complemento == other.Complemento ||
                    Complemento != null &&
                    Complemento.Equals(other.Complemento)
                ) && 
                (
                    CodIndicacao == other.CodIndicacao ||
                    CodIndicacao != null &&
                    CodIndicacao.Equals(other.CodIndicacao)
                ) && 
                (
                    DataNascimento == other.DataNascimento ||
                    DataNascimento != null &&
                    DataNascimento.Equals(other.DataNascimento)
                ) && 
                (
                    PhoneNumber == other.PhoneNumber ||
                    PhoneNumber != null &&
                    PhoneNumber.Equals(other.PhoneNumber)
                ) && 
                (
                    PhoneModel == other.PhoneModel ||
                    PhoneModel != null &&
                    PhoneModel.Equals(other.PhoneModel)
                ) && 
                (
                    Imei == other.Imei ||
                    Imei != null &&
                    Imei.Equals(other.Imei)
                ) && 
                (
                    Uuid == other.Uuid ||
                    Uuid != null &&
                    Uuid.Equals(other.Uuid)
                ) && 
                (
                    Senha == other.Senha ||
                    Senha != null &&
                    Senha.Equals(other.Senha)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Username != null)
                    hashCode = hashCode * 59 + Username.GetHashCode();
                    if (Nome != null)
                    hashCode = hashCode * 59 + Nome.GetHashCode();
                    if (Login != null)
                    hashCode = hashCode * 59 + Login.GetHashCode();
                    if (Email != null)
                    hashCode = hashCode * 59 + Email.GetHashCode();
                    if (CpfCnpj != null)
                    hashCode = hashCode * 59 + CpfCnpj.GetHashCode();
                    if (Cidade != null)
                    hashCode = hashCode * 59 + Cidade.GetHashCode();
                    if (Uf != null)
                    hashCode = hashCode * 59 + Uf.GetHashCode();
                    if (Cep != null)
                    hashCode = hashCode * 59 + Cep.GetHashCode();
                    if (Endereco != null)
                    hashCode = hashCode * 59 + Endereco.GetHashCode();
                    if (Bairro != null)
                    hashCode = hashCode * 59 + Bairro.GetHashCode();
                    if (Numero != null)
                    hashCode = hashCode * 59 + Numero.GetHashCode();
                    if (Complemento != null)
                    hashCode = hashCode * 59 + Complemento.GetHashCode();
                    if (CodIndicacao != null)
                    hashCode = hashCode * 59 + CodIndicacao.GetHashCode();
                    if (DataNascimento != null)
                    hashCode = hashCode * 59 + DataNascimento.GetHashCode();
                    if (PhoneNumber != null)
                    hashCode = hashCode * 59 + PhoneNumber.GetHashCode();
                    if (PhoneModel != null)
                    hashCode = hashCode * 59 + PhoneModel.GetHashCode();
                    if (Imei != null)
                    hashCode = hashCode * 59 + Imei.GetHashCode();
                    if (Uuid != null)
                    hashCode = hashCode * 59 + Uuid.GetHashCode();
                    if (Senha != null)
                    hashCode = hashCode * 59 + Senha.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(ReqNewUsuarioDef left, ReqNewUsuarioDef right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ReqNewUsuarioDef left, ReqNewUsuarioDef right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
