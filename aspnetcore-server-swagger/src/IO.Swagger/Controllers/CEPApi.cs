/*
 * FVC
 *
 * API para o app Floripa Versus Corona  
 *
 * OpenAPI spec version: 1.0.0
 * Contact: binhara@azuris.com.br
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
 
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class CEPApiController : ControllerBase
    { 
        /// <summary>
        /// retorna dados do endereço através da consulta do cep
        /// </summary>
        /// <remarks>retorna dados do endereço através da consulta do cep </remarks>
        /// <param name="cep">Cep para busca</param>
        /// <response code="200">Sucesso!</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/binhara/FloripaVsCorona/1/users/cep/{cep}")]
        [ValidateModelState]
        [SwaggerOperation("UsersCepCepGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(CepDef), description: "Sucesso!")]
        [SwaggerResponse(statusCode: 0, type: typeof(ErrorDef), description: "Unexpected error")]
        public virtual IActionResult UsersCepCepGet([FromRoute][Required]string cep)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CepDef));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(ErrorDef));

            string exampleJson = null;
            exampleJson = "{\n  \"code\" : 0,\n  \"data\" : {\n    \"uf\" : \"uf\",\n    \"complemento\" : \"complemento\",\n    \"logradouro\" : \"logradouro\",\n    \"bairro\" : \"bairro\",\n    \"localidade\" : \"localidade\",\n    \"ibge\" : \"ibge\",\n    \"unidade\" : \"unidade\",\n    \"gia\" : \"gia\",\n    \"cep\" : \"cep\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CepDef>(exampleJson)
            : default(CepDef);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
