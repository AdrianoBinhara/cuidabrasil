/*
 * FVC
 *
 * API para o app Floripa Versus Corona  
 *
 * OpenAPI spec version: 1.0.0
 * Contact: binhara@azuris.com.br
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
 
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class UserApiController : ControllerBase
    { 
        /// <summary>
        /// Usuario autenticado
        /// </summary>
        /// <remarks>Retorna o usu&amp;aacute;rio que esta autenticado pelo token. </remarks>
        /// <param name="authorization">Token de identifica&amp;ccedil;&amp;atilde;o do usu&amp;aacute;rio.</param>
        /// <response code="200">Usu&amp;aacute;rio autenticado.</response>
        /// <response code="400">Falha na autenticao.</response>
        /// <response code="401">Falha na autenticao.</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/binhara/FloripaVsCorona/1/users/informations")]
        [ValidateModelState]
        [SwaggerOperation("UsersInformationsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(UsuarioDef), description: "Usu&amp;aacute;rio autenticado.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorDef), description: "Falha na autenticao.")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorDef), description: "Falha na autenticao.")]
        [SwaggerResponse(statusCode: 0, type: typeof(ErrorDef), description: "Unexpected error")]
        public virtual IActionResult UsersInformationsGet([FromHeader][Required()]string authorization)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(UsuarioDef));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorDef));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(ErrorDef));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(ErrorDef));

            string exampleJson = null;
            exampleJson = "{\n  \"idrede_distribuicao\" : 1,\n  \"cidade\" : \"cidade\",\n  \"endereco\" : \"endereco\",\n  \"numero\" : \"numero\",\n  \"ddd\" : \"ddd\",\n  \"bairro\" : \"bairro\",\n  \"validade_licenca_assinou\" : \"validade_licenca_assinou\",\n  \"conta\" : \"conta\",\n  \"banco\" : \"banco\",\n  \"nome\" : \"nome\",\n  \"idpessoa\" : 0,\n  \"login\" : \"login\",\n  \"cpf_cnpj\" : \"cpf_cnpj\",\n  \"agencia\" : \"agencia\",\n  \"cep\" : \"cep\",\n  \"fone\" : \"fone\",\n  \"uf\" : \"uf\",\n  \"codmunicipioserpro\" : 5,\n  \"complemento\" : \"complemento\",\n  \"perm_indicar_cae\" : \"perm_indicar_cae\",\n  \"data_nascimento\" : \"data_nascimento\",\n  \"cod_indicacao\" : 5,\n  \"idtipo_pessoa\" : 6,\n  \"email\" : \"email\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<UsuarioDef>(exampleJson)
            : default(UsuarioDef);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// altera dados cadastrais do usuário logado
        /// </summary>
        /// <remarks>altera dados cadastrais do usuário logado </remarks>
        /// <param name="authorization">Token de identifica&amp;ccedil;&amp;atilde;o do usu&amp;aacute;rio.</param>
        /// <param name="requestBody">Dados do usuario</param>
        /// <response code="200">Dados atualizados</response>
        /// <response code="400">Falha na autenticao.</response>
        /// <response code="401">Falha na autenticao.</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/binhara/FloripaVsCorona/1/users/informations")]
        [ValidateModelState]
        [SwaggerOperation("UsersInformationsPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ErrorDef), description: "Dados atualizados")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorDef), description: "Falha na autenticao.")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorDef), description: "Falha na autenticao.")]
        [SwaggerResponse(statusCode: 0, type: typeof(ErrorDef), description: "Unexpected error")]
        public virtual IActionResult UsersInformationsPost([FromHeader][Required()]string authorization, [FromBody]ReqNewUsuarioDef requestBody)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ErrorDef));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorDef));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(ErrorDef));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(ErrorDef));

            string exampleJson = null;
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\",\n  \"error\" : \"error\",\n  \"errors\" : [ \"errors\", \"errors\" ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ErrorDef>(exampleJson)
            : default(ErrorDef);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Salva o token do device com app
        /// </summary>
        /// <remarks>Salva o token do device com app </remarks>
        /// <param name="authorization">Token de identifica&amp;ccedil;&amp;atilde;o do usu&amp;aacute;rio.</param>
        /// <param name="requestBody">Dados do usuario</param>
        /// <response code="200">Dados atualizados</response>
        /// <response code="400">Falha na autenticao.</response>
        /// <response code="401">Falha na autenticao.</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/binhara/FloripaVsCorona/1/users/token")]
        [ValidateModelState]
        [SwaggerOperation("UsersTokenPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ErrorDef), description: "Dados atualizados")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorDef), description: "Falha na autenticao.")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorDef), description: "Falha na autenticao.")]
        [SwaggerResponse(statusCode: 0, type: typeof(ErrorDef), description: "Unexpected error")]
        public virtual IActionResult UsersTokenPost([FromHeader][Required()]string authorization, [FromBody]SalvarTokenRequest requestBody)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ErrorDef));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorDef));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(ErrorDef));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(ErrorDef));

            string exampleJson = null;
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\",\n  \"error\" : \"error\",\n  \"errors\" : [ \"errors\", \"errors\" ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ErrorDef>(exampleJson)
            : default(ErrorDef);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
